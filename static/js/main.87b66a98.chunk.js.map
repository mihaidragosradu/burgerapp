{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","Auxiliary","className","styles","Content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","INGREDIENT_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","sum","disabledInfo","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.87b66a98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__JcKRC\",\"BreadTop\":\"BurgerIngredient_BreadTop__2fG_i\",\"Seeds1\":\"BurgerIngredient_Seeds1__3OGO-\",\"Seeds2\":\"BurgerIngredient_Seeds2__1ra2B\",\"Meat\":\"BurgerIngredient_Meat__39-KL\",\"Cheese\":\"BurgerIngredient_Cheese__38YZS\",\"Salad\":\"BurgerIngredient_Salad__5kErI\",\"Bacon\":\"BurgerIngredient_Bacon__2x0pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__H85w6\",\"Label\":\"BuildControl_Label___ZhBN\",\"Less\":\"BuildControl_Less__N9KFj\",\"More\":\"BuildControl_More__2_YCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1WNns\",\"OrderButton\":\"BuildControls_OrderButton__3O-eg\",\"enable\":\"BuildControls_enable__3b-2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2rYfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__Q5AwR\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from \"react\";\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport styles from './Layout.module.css'\r\n\r\nconst layout = ( props ) => (\r\n  <Auxiliary>\r\n    <div>Toolbar, SideDrawer, Backdrop</div>\r\n    <main className={styles.Content}>\r\n     {props.children}\r\n     </main>\r\n  </Auxiliary>\r\n);\r\n\r\nexport default layout;","import React, { Component } from \"react\";\r\nimport styles from \"./BurgerIngredient.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component{\r\n\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case ('bread-bottom'):\r\n        ingredient = <div className={styles.BreadBottom}></div>;\r\n        break;\r\n      case ('bread-top'):\r\n        ingredient = (\r\n          <div className={styles.BreadTop}>\r\n            <div className={styles.Seeds1}></div>\r\n            <div className={styles.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case ('meat'):\r\n        ingredient = <div className={styles.Meat}></div>;\r\n        break;\r\n      case ('cheese'):\r\n        ingredient = <div className={styles.Cheese}></div>;\r\n        break;\r\n      case ('bacon'):\r\n        ingredient = <div className={styles.Bacon}></div>;\r\n        break;\r\n      case ('salad'):\r\n        ingredient = <div className={styles.Salad}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport styles from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nexport default burger;\r\n","import React from 'react';\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={styles.BuildControl}>\r\n        <div className={styles.Label}>{props.label}</div>\r\n        <button \r\n        className={styles.Less} \r\n        onClick={props.removed} \r\n        disabled={props.disabled}>Less</button>\r\n        <button className={styles.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from \"react\";\r\nimport styles from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={styles.BuildControls}>\r\n  <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n    {controls.map((ctrl) => (\r\n      <BuildControl\r\n        key={ctrl.label}\r\n        label={ctrl.label}\r\n        added={() => props.ingredientAdded(ctrl.type)}\r\n        removed={() => props.ingredientRemoved(ctrl.type)}\r\n        disabled = {props.disabled[ctrl.type]}\r\n      />\r\n    ))}\r\n    <button \r\n    className={styles.OrderButton}\r\n    disabled = {!props.purchasable}>ORDER NOW</button>\r\n  </div>\r\n);\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\n\r\nconst INGREDIENT_PRICE = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\nclass BurgerBuilder extends Component {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {...}\r\n  // }\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n  };\r\n\r\n  updatePurchaseState(ingredients) {\r\n   \r\n    const sum = Object.keys(ingredients)\r\n      .map((igKey) => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    this.setState({ purchasable: sum > 0 });\r\n  }\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICE[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICE[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    return (\r\n      <Auxiliary>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          purchasable={this.state.purchasable}\r\n          price={this.state.totalPrice}\r\n        />\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}